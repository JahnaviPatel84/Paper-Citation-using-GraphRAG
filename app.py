# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hxv3dEdx-7VDSbaUY42wuZvbdqSHXfVQ
"""

import streamlit as st
import pandas as pd
from sentence_transformers import SentenceTransformer, util

# Load data
@st.cache_data
def load_data():
    concepts_df = pd.read_csv("data/leiden_clusters.csv")
    papers_df = pd.read_csv("data/Paper_Info.csv")
    return concepts_df, papers_df

# Load model
@st.cache_resource
def load_model():
    return SentenceTransformer('all-MiniLM-L6-v2')

# Semantic Search
def find_top_concepts(query, concepts_df, model, top_k=5):
    concept_texts = concepts_df['description'].fillna('')
    concept_embeddings = model.encode(concept_texts, convert_to_tensor=True)
    query_embedding = model.encode(query, convert_to_tensor=True)
    similarities = util.pytorch_cos_sim(query_embedding, concept_embeddings)[0]
    top_indices = similarities.argsort(descending=True)[:top_k]
    results = concepts_df.iloc[top_indices.cpu().numpy()].copy()
    results['score'] = similarities[top_indices].cpu().numpy()
    return results

# Match Papers
def find_related_papers(concepts, papers_df):
    related_papers = []
    for concept in concepts['name']:
        matching_papers = papers_df[papers_df['Title'].str.contains(concept, case=False, na=False)]
        related_papers.append((concept, matching_papers))
    return related_papers

# -------------------- Streamlit Interface --------------------

st.set_page_config(page_title="Graph-RAG Citation Recommender", layout="wide")

st.markdown("""
<style>
    .big-title {
        font-size:40px !important;
        font-weight:700;
        color:#1F4E79;
    }
    .section-title {
        font-size:28px !important;
        font-weight:600;
        margin-top:20px;
    }
    .footer {
        font-size:14px;
        color:gray;
        margin-top:50px;
    }
</style>
""", unsafe_allow_html=True)

# Hero Section
st.markdown('<h1 class="big-title">📚 Graph-RAG Citation Recommender</h1>', unsafe_allow_html=True)
st.write("An intelligent assistant to recommend research citations based on your input paragraph using graph-based retrieval and concept clustering.")

# Load Data
concepts_df, papers_df = load_data()
model = load_model()

# Input Section
st.markdown('<h2 class="section-title">🔍 Enter your research paragraph</h2>', unsafe_allow_html=True)
query = st.text_area("Paste your paragraph here:", height=180)

# Citation Format
st.markdown("**📑 Citation Format: MLA (Default)**")

# Search Button
if st.button("🔎 Recommend Citations") and query.strip():
    with st.spinner("Processing your query..."):
        top_concepts = find_top_concepts(query, concepts_df, model)
        related_papers = find_related_papers(top_concepts, papers_df)

    st.markdown('<h2 class="section-title">📄 Recommended Papers</h2>', unsafe_allow_html=True)

    found = False
    for concept, paper_group in related_papers:
        if paper_group.empty:
            continue
        for _, paper in paper_group.iterrows():
            found = True
            st.markdown(f"**{paper['Title']}**")
            st.markdown(f"🖊️ {paper['Authors']} | 📅 {paper['Publishing Date']}")
            if pd.notna(paper['URL for pdf']):
                st.markdown(f"🔗 [Access Paper]({paper['URL for pdf']})")
            # MLA citation only
            st.markdown(f"📌 **Citation (MLA):** {paper['Authors']}. \"{paper['Title']}\". {paper['Publishing Date']}. {paper['URL for pdf']}")

    if not found:
        st.warning("No related papers were found for your query. Try rephrasing it.")

# Sidebar - Project Info
st.sidebar.image("logo.jpg", use_column_width=True)
st.sidebar.title("📁 Project Info")
st.sidebar.markdown("""
**Graph-RAG Citation Recommender** helps you discover relevant research citations from a knowledge graph built on NLP concepts and papers.

- Built using **Leiden Clustering**
- Uses **Sentence Transformers** for semantic search
- Powered by **Graph-based Retrieval**

**Contributors:**
- Jahnavi Patel
- Pratishtha Gaur
- Vivek Rayalu
""")

# Footer
st.markdown('<div class="footer">© 2025 Graph-RAG Citation Discovery | All rights reserved.</div>', unsafe_allow_html=True)